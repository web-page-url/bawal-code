import React, { useState } from 'react';
import Head from "next/head";
import Link from "next/link";

const CodeBlock = ({ children, title, description }) => {
    const [copied, setCopied] = useState(false);

    const copyToClipboard = async () => {
        try {
            await navigator.clipboard.writeText(children);
            setCopied(true);
            setTimeout(() => setCopied(false), 2000);
        } catch (err) {
            console.error('Failed to copy:', err);
        }
    };

    return (
        <div className="bg-surface border border-primary rounded-theme overflow-hidden mb-6 shadow-lg hover:shadow-xl transition-all duration-300">
            {title && (
                <div className="bg-primary text-background px-4 py-3 flex justify-between items-center">
                    <div>
                        <h4 className="font-bold text-lg">{title}</h4>
                        {description && <p className="text-sm opacity-90 mt-1">{description}</p>}
                    </div>
                    <button
                        onClick={copyToClipboard}
                        className={`px-3 py-1.5 rounded transition-all duration-300 text-sm font-bold ${
                            copied 
                                ? 'bg-green-500 text-white' 
                                : 'bg-background text-primary hover:bg-gray-100'
                        }`}
                    >
                        {copied ? '‚úì ‡§ï‡•â‡§™‡•Ä ‡§π‡•ã ‡§ó‡§Ø‡§æ!' : 'üìã ‡§ï‡•â‡§™‡•Ä ‡§ï‡§∞‡•á‡§Ç'}
                    </button>
                </div>
            )}
            <pre className="p-4 bg-surface-light text-text-primary font-code text-sm overflow-x-auto template-scrollbar leading-relaxed">
                {children}
            </pre>
        </div>
    );
};

const Section = ({ id, icon, title, children, gradient = false }) => (
    <section id={id} className={`mb-16 scroll-mt-20 ${gradient ? 'bg-gradient-to-r from-primary/5 to-accent/5 p-8 rounded-2xl border border-primary/20' : ''}`}>
        <h2 className="text-3xl md:text-4xl font-bold text-primary mb-6 flex items-center gap-3">
            <span className="text-4xl">{icon}</span>
            {title}
        </h2>
        {children}
    </section>
);

const FeatureCard = ({ icon, title, description, example }) => (
    <div className="bg-surface border border-primary rounded-theme p-6 transform-hover transition-all duration-300 hover:shadow-xl">
        <div className="text-3xl mb-4">{icon}</div>
        <h3 className="text-xl font-bold text-primary mb-3">{title}</h3>
        <p className="text-text-secondary mb-4">{description}</p>
        {example && (
            <div className="bg-surface-light p-3 rounded border border-primary/30">
                <code className="text-sm font-code text-accent">{example}</code>
            </div>
        )}
    </div>
);

export default function Documentation() {
    const [activeSection, setActiveSection] = useState('intro');
    const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

    const navigationItems = [
        { id: 'intro', title: '‡§™‡§∞‡§ø‡§ö‡§Ø (Introduction)', icon: 'üè†' },
        { id: 'getting-started', title: '‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ (Getting Started)', icon: 'üöÄ' },
        { id: 'variables', title: '‡§ö‡§∞ (Variables)', icon: 'üì¶' },
        { id: 'operators', title: '‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ï (Operators)', icon: 'üî¢' },
        { id: 'conditions', title: '‡§∂‡§∞‡•ç‡§§‡•á‡§Ç (Conditional Statements)', icon: 'üîÄ' },
        { id: 'loops', title: '‡§≤‡•Ç‡§™‡•ç‡§∏ (Loops)', icon: 'üîÑ' },
        { id: 'functions', title: '‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§® (Functions)', icon: '‚ö°' },
        { id: 'input-output', title: '‡§á‡§®‡§™‡•Å‡§ü/‡§Ü‡§â‡§ü‡§™‡•Å‡§ü (Input/Output)', icon: 'üí¨' },
        { id: 'examples', title: '‡§â‡§¶‡§æ‡§π‡§∞‡§£ (Examples)', icon: 'üìö' },
        { id: 'best-practices', title: '‡§¨‡•á‡§∏‡•ç‡§ü ‡§™‡•ç‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§∏‡•á‡§ú (Best Practices)', icon: '‚ú®' }
    ];

    return (
        <div className="min-h-screen bg-gradient-primary">
            <Head>
                <title>Bawal Code Documentation - Complete Guide</title>
                <meta name="description" content="Complete documentation for Bawal Code programming language. Learn Hindi-inspired programming with detailed examples and tutorials." />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {/* Header */}
            <header className="bg-surface border-b border-primary shadow-lg sticky top-0 z-50">
                <div className="max-w-6xl mx-auto px-4 py-4 flex justify-between items-center">
                    <Link href="/" className="flex items-center gap-3 text-primary hover:text-primary-dark transition-colors">
                        <span className="text-2xl font-bold">‚Üê Bawal Code</span>
                    </Link>
                    <h1 className="text-xl md:text-2xl font-bold text-primary hidden sm:block">Documentation</h1>
                    <button 
                        onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
                        className="lg:hidden bg-primary text-background px-3 py-2 rounded font-bold"
                    >
                        {mobileMenuOpen ? '‚úï' : '‚ò∞'} Menu
                    </button>
                </div>
            </header>

            {/* Mobile Navigation */}
            {mobileMenuOpen && (
                <div className="lg:hidden bg-surface border-b border-primary shadow-lg">
                    <div className="max-w-6xl mx-auto px-4 py-4">
                        <h2 className="text-lg font-bold text-primary mb-4">‡§µ‡§ø‡§∑‡§Ø ‡§∏‡•Ç‡§ö‡•Ä</h2>
                        <div className="grid grid-cols-2 gap-2">
                            {navigationItems.map((item) => (
                                <a
                                    key={item.id}
                                    href={`#${item.id}`}
                                    onClick={() => {
                                        setActiveSection(item.id);
                                        setMobileMenuOpen(false);
                                    }}
                                    className={`flex items-center gap-2 px-3 py-2 rounded transition-all duration-300 text-sm ${
                                        activeSection === item.id 
                                            ? 'bg-primary text-background' 
                                            : 'text-text-primary hover:bg-primary/10 hover:text-primary'
                                    }`}
                                >
                                    <span>{item.icon}</span>
                                    <span className="text-xs">{item.title}</span>
                                </a>
                            ))}
                        </div>
                    </div>
                </div>
            )}

            <div className="relative">
                {/* Sidebar Navigation */}
                <nav className="hidden lg:block w-64 bg-surface border-r border-primary fixed left-0 top-16 h-screen overflow-y-auto template-scrollbar z-30">
                    <div className="p-6">
                        <h2 className="text-lg font-bold text-primary mb-4">‡§µ‡§ø‡§∑‡§Ø ‡§∏‡•Ç‡§ö‡•Ä</h2>
                        <ul className="space-y-2">
                            {navigationItems.map((item) => (
                                <li key={item.id}>
                                    <a
                                        href={`#${item.id}`}
                                        onClick={() => setActiveSection(item.id)}
                                        className={`flex items-center gap-3 px-3 py-2 rounded transition-all duration-300 ${
                                            activeSection === item.id 
                                                ? 'bg-primary text-background' 
                                                : 'text-text-primary hover:bg-primary/10 hover:text-primary'
                                        }`}
                                    >
                                        <span>{item.icon}</span>
                                        <span className="text-sm">{item.title}</span>
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>
                </nav>

                {/* Main Content */}
                <main className="w-full max-w-6xl mx-auto p-4 md:p-8 lg:p-12 lg:ml-64">
                    {/* Introduction */}
                    <Section id="intro" icon="üáÆüá≥" title="Bawal Code Documentation" gradient={true}>
                        <div className="text-lg text-text-secondary mb-8 leading-relaxed">
                            <p className="mb-4">
                                <strong className="text-primary">Bawal Code</strong> ‡§è‡§ï revolutionary programming language ‡§π‡•à ‡§ú‡•ã Hindi keywords ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§ 
                                ‡§Ø‡§π programming ‡§ï‡•ã ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø developers ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ß‡§ø‡§ï accessible ‡§î‡§∞ intuitive ‡§¨‡§®‡§æ‡§§‡•Ä ‡§π‡•à‡•§
                            </p>
                            <p className="mb-6">
                                ‡§á‡§∏ documentation ‡§Æ‡•á‡§Ç ‡§Ü‡§™ ‡§∏‡•Ä‡§ñ‡•á‡§Ç‡§ó‡•á ‡§ï‡§ø ‡§ï‡•à‡§∏‡•á Bawal Code ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á powerful programs ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
                            </p>
                        </div>

                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            <FeatureCard 
                                icon="üáÆüá≥" 
                                title="Hindi Keywords" 
                                description="‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§∂‡§¨‡•ç‡§¶‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç"
                                example="ye naam = '‡§∞‡§æ‡§Æ';"
                            />
                            <FeatureCard 
                                icon="‚ö°" 
                                title="Fast Execution" 
                                description="‡§§‡•Å‡§∞‡§Ç‡§§ code execute ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ results ‡§¶‡•á‡§ñ‡•á‡§Ç"
                                example="bol 'Hello World!';"
                            />
                            <FeatureCard 
                                icon="üõ°Ô∏è" 
                                title="Safe & Secure" 
                                description="Built-in security ‡§ï‡•á ‡§∏‡§æ‡§• safe programming"
                                example="bawal suru ... bawal khatam"
                            />
                        </div>
                    </Section>

                    {/* Getting Started */}
                    <Section id="getting-started" icon="üöÄ" title="‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç">
                        <p className="text-lg text-text-secondary mb-6">
                            Bawal Code program ‡§π‡§Æ‡•á‡§∂‡§æ <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">bawal suru</code> ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à 
                            ‡§î‡§∞ <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">bawal khatam</code> ‡§™‡§∞ ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
                        </p>

                        <CodeBlock 
                            title="Basic Program Structure"
                            description="‡§π‡§∞ Bawal Code program ‡§ï‡§æ basic structure"
                        >
{`bawal suru

// ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™‡§ï‡§æ code ‡§≤‡§ø‡§ñ‡•á‡§Ç
ye sandesh = '‡§®‡§Æ‡§∏‡•ç‡§§‡•á ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ!';
bol sandesh;

bawal khatam`}
                        </CodeBlock>

                        <div className="bg-accent/10 border border-accent/30 rounded-lg p-4 mb-6">
                            <h4 className="font-bold text-accent mb-2">üí° Important Note:</h4>
                            <p className="text-text-secondary">
                                ‡§¨‡§ø‡§®‡§æ <strong>bawal suru</strong> ‡§î‡§∞ <strong>bawal khatam</strong> ‡§ï‡•á ‡§Ü‡§™‡§ï‡§æ program run ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§ó‡§æ!
                            </p>
                        </div>
                    </Section>

                    {/* Variables */}
                    <Section id="variables" icon="üì¶" title="‡§ö‡§∞ (Variables)">
                        <p className="text-lg text-text-secondary mb-6">
                            Variables data store ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§ Bawal Code ‡§Æ‡•á‡§Ç <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">ye</code> keyword ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á variables ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§
                        </p>

                        <CodeBlock 
                            title="Variable Declaration"
                            description="‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á variables ‡§¨‡§®‡§æ‡§®‡§æ"
                        >
{`bawal suru

// Text (String) variables
ye naam = '‡§Ö‡§®‡•Å‡§≠‡§µ';
ye sheher = '‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä';

// Number variables  
ye umar = 25;
ye salary = 50000.75;

// Boolean variables
ye hai_student = true;
ye hai_married = false;

// Variables ‡§ï‡•ã print ‡§ï‡§∞‡§®‡§æ
bol naam;
bol "‡§â‡§Æ‡•ç‡§∞: " + umar;
bol "‡§∂‡§π‡§∞: " + sheher;

bawal khatam`}
                        </CodeBlock>

                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                            <div className="bg-surface border border-primary rounded-lg p-4">
                                <h4 className="font-bold text-primary mb-3">‚úÖ ‡§∏‡§π‡•Ä ‡§§‡§∞‡•Ä‡§ï‡§æ</h4>
                                <pre className="text-sm font-code text-green-600">ye naam = '‡§∞‡§æ‡§Æ';
ye sankhya = 100;</pre>
                            </div>
                            <div className="bg-surface border border-red-500 rounded-lg p-4">
                                <h4 className="font-bold text-red-500 mb-3">‚ùå ‡§ó‡§≤‡§§ ‡§§‡§∞‡•Ä‡§ï‡§æ</h4>
                                <pre className="text-sm font-code text-red-500">naam = '‡§∞‡§æ‡§Æ'; // 'ye' missing
var sankhya = 100; // Wrong keyword</pre>
                            </div>
                        </div>
                    </Section>

                    {/* Operators */}
                    <Section id="operators" icon="üî¢" title="‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ï (Operators)">
                        <p className="text-lg text-text-secondary mb-6">
                            Mathematical ‡§î‡§∞ logical operations ‡§ï‡•á ‡§≤‡§ø‡§è operators ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§
                        </p>

                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
                            <div>
                                <h3 className="text-xl font-bold text-primary mb-4">Arithmetic Operators</h3>
                                <CodeBlock title="‡§ó‡§£‡§ø‡§§‡•Ä‡§Ø ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§®">
{`bawal suru

ye a = 10;
ye b = 5;

ye jod = a + b;        // Addition: 15
ye antar = a - b;      // Subtraction: 5  
ye gunafal = a * b;    // Multiplication: 50
ye bhag = a / b;       // Division: 2
ye shesh = a % b;      // Modulus: 0

bol "‡§ú‡•ã‡§°‡§º: " + jod;
bol "‡§Ö‡§Ç‡§§‡§∞: " + antar;
bol "‡§ó‡•Å‡§£‡§´‡§≤: " + gunafal;

bawal khatam`}
                                </CodeBlock>
                            </div>

                            <div>
                                <h3 className="text-xl font-bold text-primary mb-4">Comparison Operators</h3>
                                <CodeBlock title="‡§§‡•Å‡§≤‡§®‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§®">
{`bawal suru

ye x = 10;
ye y = 20;

bol x == y;    // false (Equal)
bol x != y;    // true (Not Equal)
bol x < y;     // true (Less than)
bol x > y;     // false (Greater than)
bol x <= y;    // true (Less than equal)
bol x >= y;    // false (Greater than equal)

bawal khatam`}
                                </CodeBlock>
                            </div>
                        </div>
                    </Section>

                    {/* Conditions */}
                    <Section id="conditions" icon="üîÄ" title="‡§∂‡§∞‡•ç‡§§‡•á‡§Ç (Conditional Statements)">
                        <p className="text-lg text-text-secondary mb-6">
                            Decision making ‡§ï‡•á ‡§≤‡§ø‡§è <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">agar</code> (if) 
                            ‡§î‡§∞ <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">warna</code> (else) ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§
                        </p>

                        <CodeBlock 
                            title="If-Else Statement"
                            description="Age checker program"
                        >
{`bawal suru

ye umar = 18;

agar (umar >= 18) {
    bol "‡§Ü‡§™ ‡§µ‡§Ø‡§∏‡•ç‡§ï ‡§π‡•à‡§Ç!";
    bol "‡§Ü‡§™ vote ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§";
} warna {
    bol "‡§Ü‡§™ ‡§®‡§æ‡§¨‡§æ‡§≤‡§ø‡§ó ‡§π‡•à‡§Ç‡•§";
    bol "‡§Ü‡§™‡§ï‡•ã " + (18 - umar) + " ‡§∏‡§æ‡§≤ ‡§î‡§∞ ‡§á‡§Ç‡§§‡§ú‡§º‡§æ‡§∞ ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡§ó‡§æ‡•§";
}

bawal khatam`}
                        </CodeBlock>

                        <CodeBlock 
                            title="Multiple Conditions"
                            description="Grade calculator with multiple conditions"
                        >
{`bawal suru

ye ank = 85;

agar (ank >= 90) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: A+ (‡§â‡§§‡•ç‡§ï‡•É‡§∑‡•ç‡§ü!)";
} warna agar (ank >= 80) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: A (‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡§æ!)";
} warna agar (ank >= 70) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: B (‡§Ö‡§ö‡•ç‡§õ‡§æ!)";
} warna agar (ank >= 60) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: C (‡§î‡§∏‡§§)";
} warna {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: F (‡§Ö‡§®‡•Å‡§§‡•ç‡§§‡•Ä‡§∞‡•ç‡§£)";
}

bawal khatam`}
                        </CodeBlock>
                    </Section>

                    {/* Loops */}
                    <Section id="loops" icon="üîÑ" title="‡§≤‡•Ç‡§™‡•ç‡§∏ (Loops)">
                        <p className="text-lg text-text-secondary mb-6">
                            Repetitive tasks ‡§ï‡•á ‡§≤‡§ø‡§è <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">jabtak</code> (while) loop ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§
                        </p>

                        <CodeBlock 
                            title="While Loop"
                            description="1 ‡§∏‡•á 10 ‡§§‡§ï counting"
                        >
{`bawal suru

ye ginti = 1;

bol "1 ‡§∏‡•á 10 ‡§§‡§ï ‡§ó‡§ø‡§®‡§§‡•Ä:";
jabtak (ginti <= 10) {
    bol "‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ: " + ginti;
    ye ginti = ginti + 1;
}

bol "‡§ó‡§ø‡§®‡§§‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§π‡•ã ‡§ó‡§à!";

bawal khatam`}
                        </CodeBlock>

                        <CodeBlock 
                            title="Multiplication Table"
                            description="‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§ï‡§æ ‡§™‡§π‡§æ‡§°‡§º‡§æ"
                        >
{`bawal suru

ye sankhya = 7;
ye ginti = 1;

bol sankhya + " ‡§ï‡§æ ‡§™‡§π‡§æ‡§°‡§º‡§æ:";
jabtak (ginti <= 10) {
    ye parinaam = sankhya * ginti;
    bol sankhya + " x " + ginti + " = " + parinaam;
    ye ginti = ginti + 1;
}

bawal khatam`}
                        </CodeBlock>
                    </Section>

                    {/* Functions */}
                    <Section id="functions" icon="‚ö°" title="‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§® (Functions)">
                        <p className="text-lg text-text-secondary mb-6">
                            Code ‡§ï‡•ã reusable ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">kaam</code> keyword ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á functions ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§
                        </p>

                        <CodeBlock 
                            title="Simple Function"
                            description="Basic function definition ‡§î‡§∞ calling"
                        >
{`bawal suru

// Function definition
kaam abhivadan(naam) {
    bol "‡§®‡§Æ‡§∏‡•ç‡§§‡•á, " + naam + "!";
    bol "Bawal Code ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à‡•§";
}

kaam jod(pehla, dusra) {
    ye parinaam = pehla + dusra;
    bol pehla + " + " + dusra + " = " + parinaam;
    return parinaam;
}

// Function calls
abhivadan("‡§Ö‡§®‡•Å‡§≠‡§µ");
abhivadan("‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ");

ye result = jod(15, 25);
bol "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ: " + result;

bawal khatam`}
                        </CodeBlock>

                        <CodeBlock 
                            title="Advanced Function"
                            description="Complex logic ‡§ï‡•á ‡§∏‡§æ‡§• function"
                        >
{`bawal suru

kaam factorial(sankhya) {
    ye parinaam = 1;
    ye ginti = 1;
    
    jabtak (ginti <= sankhya) {
        ye parinaam = parinaam * ginti;
        ye ginti = ginti + 1;
    }
    
    bol sankhya + " ‡§ï‡§æ factorial = " + parinaam;
    return parinaam;
}

kaam sam_visham(sankhya) {
    agar (sankhya % 2 == 0) {
        bol sankhya + " ‡§è‡§ï ‡§∏‡§Æ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§π‡•à‡•§";
    } warna {
        bol sankhya + " ‡§è‡§ï ‡§µ‡§ø‡§∑‡§Æ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§π‡•à‡•§";
    }
}

factorial(5);
sam_visham(7);
sam_visham(10);

bawal khatam`}
                        </CodeBlock>
                    </Section>

                    {/* Input Output */}
                    <Section id="input-output" icon="üí¨" title="‡§á‡§®‡§™‡•Å‡§ü/‡§Ü‡§â‡§ü‡§™‡•Å‡§ü (Input/Output)">
                        <p className="text-lg text-text-secondary mb-6">
                            User ‡§∏‡•á input ‡§≤‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">nivesh</code> 
                            ‡§î‡§∞ output show ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è <code className="bg-primary/20 px-2 py-1 rounded text-primary font-code">bol</code> ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§
                        </p>

                        <CodeBlock 
                            title="User Input Example"
                            description="User ‡§∏‡•á information ‡§≤‡•á‡§®‡§æ"
                        >
{`bawal suru

bol "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:";
nivesh naam;

bol "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:";
nivesh umar;

bol "‡§®‡§Æ‡§∏‡•ç‡§§‡•á " + naam + "!";
bol "‡§Ü‡§™‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ " + umar + " ‡§∏‡§æ‡§≤ ‡§π‡•à‡•§";

agar (umar >= 18) {
    bol "‡§Ü‡§™ ‡§è‡§ï ‡§µ‡§Ø‡§∏‡•ç‡§ï ‡§π‡•à‡§Ç‡•§";
} warna {
    bol "‡§Ü‡§™ ‡§è‡§ï ‡§¨‡§ö‡•ç‡§ö‡•á ‡§π‡•à‡§Ç‡•§";
}

bawal khatam`}
                        </CodeBlock>

                        <CodeBlock 
                            title="Interactive Calculator"
                            description="User-friendly calculator"
                        >
{`bawal suru

bol "==== Bawal Calculator ====";
bol "‡§™‡§π‡§≤‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:";
nivesh pehla;

bol "‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:";
nivesh dusra;

bol "‡§ó‡§£‡§®‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç (+, -, *, /):";
nivesh operation;

agar (operation == "+") {
    ye result = pehla + dusra;
    bol "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ: " + pehla + " + " + dusra + " = " + result;
} warna agar (operation == "-") {
    ye result = pehla - dusra;
    bol "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ: " + pehla + " - " + dusra + " = " + result;
} warna agar (operation == "*") {
    ye result = pehla * dusra;
    bol "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ: " + pehla + " √ó " + dusra + " = " + result;
} warna agar (operation == "/") {
    agar (dusra != 0) {
        ye result = pehla / dusra;
        bol "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ: " + pehla + " √∑ " + dusra + " = " + result;
    } warna {
        bol "‡§§‡•ç‡§∞‡•Å‡§ü‡§ø: ‡§∂‡•Ç‡§®‡•ç‡§Ø ‡§∏‡•á ‡§≠‡§æ‡§ó ‡§∏‡§Ç‡§≠‡§µ ‡§®‡§π‡•Ä‡§Ç!";
    }
} warna {
    bol "‡§ó‡§≤‡§§ ‡§ó‡§£‡§®‡§æ! ‡§ï‡•á‡§µ‡§≤ +, -, *, / ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§";
}

bawal khatam`}
                        </CodeBlock>
                    </Section>

                    {/* Examples */}
                    <Section id="examples" icon="üìö" title="‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§â‡§¶‡§æ‡§π‡§∞‡§£">
                        <p className="text-lg text-text-secondary mb-6">
                            ‡§Ø‡§π‡§æ‡§Å ‡§ï‡•Å‡§õ complete programs ‡§π‡•à‡§Ç ‡§ú‡•ã real-world problems ‡§ï‡•ã solve ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§
                        </p>

                        <CodeBlock 
                            title="Number Guessing Game"
                            description="‡§è‡§ï ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ number guessing game"
                        >
{`bawal suru

ye secret_number = 7;
ye attempts = 0;
ye max_attempts = 3;

bol "üéÆ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§ñ‡•á‡§≤!";
bol "‡§Æ‡•à‡§Ç‡§®‡•á 1 ‡§∏‡•á 10 ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§è‡§ï ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§∏‡•ã‡§ö‡•Ä ‡§π‡•à‡•§";
bol "‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ " + max_attempts + " ‡§Æ‡•å‡§ï‡•á ‡§π‡•à‡§Ç‡•§";

jabtak (attempts < max_attempts) {
    bol "\n‡§Ö‡§™‡§®‡§æ ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç (1-10):";
    nivesh guess;
    
    ye attempts = attempts + 1;
    
    agar (guess == secret_number) {
        bol "üéâ ‡§¨‡§ß‡§æ‡§à ‡§π‡•ã! ‡§Ü‡§™‡§®‡•á ‡§∏‡§π‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§≤‡§ó‡§æ‡§Ø‡§æ!";
        bol "‡§Ü‡§™‡§®‡•á " + attempts + " ‡§ï‡•ã‡§∂‡§ø‡§∂‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§ú‡•Ä‡§§ ‡§≤‡§ø‡§Ø‡§æ‡•§";
        break;
    } warna agar (guess < secret_number) {
        bol "üìà ‡§¨‡§π‡•Å‡§§ ‡§õ‡•ã‡§ü‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ! ‡§î‡§∞ ‡§¨‡§°‡§º‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§";
    } warna {
        bol "üìâ ‡§¨‡§π‡•Å‡§§ ‡§¨‡§°‡§º‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ! ‡§î‡§∞ ‡§õ‡•ã‡§ü‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§";
    }
    
    agar (attempts < max_attempts) {
        ye remaining = max_attempts - attempts;
        bol "‡§¨‡§ö‡•Ä ‡§π‡•Å‡§à ‡§ï‡•ã‡§∂‡§ø‡§∂‡•á‡§Ç: " + remaining;
    }
}

agar (attempts == max_attempts) {
    bol "üòî ‡§ñ‡•á‡§≤ ‡§ñ‡§§‡•ç‡§Æ! ‡§∏‡§π‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§•‡•Ä: " + secret_number;
}

bawal khatam`}
                        </CodeBlock>

                        <CodeBlock 
                            title="Student Grade Manager"
                            description="Student ‡§ï‡•á marks manage ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ system"
                        >
{`bawal suru

bol "üìö Student Grade Management System";
bol "‡§õ‡§æ‡§§‡•ç‡§∞ ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:";
nivesh student_naam;

bol "‡§µ‡§ø‡§∑‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:";
nivesh total_subjects;

ye total_marks = 0;
ye subject_count = 1;

jabtak (subject_count <= total_subjects) {
    bol "‡§µ‡§ø‡§∑‡§Ø " + subject_count + " ‡§ï‡•á ‡§Ö‡§Ç‡§ï ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:";
    nivesh marks;
    
    ye total_marks = total_marks + marks;
    ye subject_count = subject_count + 1;
}

ye percentage = (total_marks / (total_subjects * 100)) * 100;

bol "\n===== ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ =====";
bol "‡§õ‡§æ‡§§‡•ç‡§∞: " + student_naam;
bol "‡§ï‡•Å‡§≤ ‡§Ö‡§Ç‡§ï: " + total_marks + "/" + (total_subjects * 100);
bol "‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§: " + percentage + "%";

agar (percentage >= 90) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: A+ (‡§â‡§§‡•ç‡§ï‡•É‡§∑‡•ç‡§ü!) üåü";
} warna agar (percentage >= 80) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: A (‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡§æ!) ‚≠ê";
} warna agar (percentage >= 70) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: B (‡§Ö‡§ö‡•ç‡§õ‡§æ!) üëç";
} warna agar (percentage >= 60) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: C (‡§î‡§∏‡§§) üòê";
} warna agar (percentage >= 40) {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: D (‡§ï‡§Æ‡§ú‡•ã‡§∞) üòü";
} warna {
    bol "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: F (‡§Ö‡§®‡•Å‡§§‡•ç‡§§‡•Ä‡§∞‡•ç‡§£) ‚ùå";
}

bawal khatam`}
                        </CodeBlock>
                    </Section>

                    {/* Best Practices */}
                    <Section id="best-practices" icon="‚ú®" title="‡§¨‡•á‡§∏‡•ç‡§ü ‡§™‡•ç‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§∏‡•á‡§ú">
                        <p className="text-lg text-text-secondary mb-8 text-center">
                            Bawal Code ‡§Æ‡•á‡§Ç ‡§¨‡•á‡§π‡§§‡§∞ programming ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§® guidelines ‡§ï‡•ã follow ‡§ï‡§∞‡•á‡§Ç
                        </p>

                        {/* Best Practices Cards */}
                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-10">
                            {/* Do's Card */}
                            <div className="bg-gradient-to-br from-green-500/10 to-emerald-500/10 border-2 border-green-500/30 rounded-2xl p-8 shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-2">
                                <div className="flex items-center gap-4 mb-6">
                                    <div className="bg-green-500 text-white w-12 h-12 rounded-full flex items-center justify-center text-2xl font-bold">
                                        ‚úì
                                    </div>
                                    <h3 className="text-2xl font-bold text-green-700">‡§∏‡§π‡•Ä ‡§§‡§∞‡•Ä‡§ï‡•á</h3>
                                </div>
                                
                                <div className="space-y-4">
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-green-500/20 rounded-lg hover:bg-green-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-green-600 text-xl mt-1 group-hover:text-white transition-colors">üéØ</span>
                                        <div>
                                            <p className="font-semibold text-green-800 group-hover:text-white transition-colors">Meaningful Variable Names</p>
                                            <p className="text-sm text-green-700 group-hover:text-green-100 transition-colors">‡§∏‡§æ‡§´ ‡§î‡§∞ ‡§∏‡§Æ‡§ù‡§®‡•á ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§®‡§æ‡§Æ ‡§¶‡•á‡§Ç</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-green-500/20 rounded-lg hover:bg-green-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-green-600 text-xl mt-1 group-hover:text-white transition-colors">üí¨</span>
                                        <div>
                                            <p className="font-semibold text-green-800 group-hover:text-white transition-colors">Comments ‡§≤‡§ø‡§ñ‡•á‡§Ç</p>
                                            <p className="text-sm text-green-700 group-hover:text-green-100 transition-colors">Code ‡§ï‡•ã explain ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-green-500/20 rounded-lg hover:bg-green-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-green-600 text-xl mt-1 group-hover:text-white transition-colors">üé®</span>
                                        <div>
                                            <p className="font-semibold text-green-800 group-hover:text-white transition-colors">Proper Indentation</p>
                                            <p className="text-sm text-green-700 group-hover:text-green-100 transition-colors">Code ‡§ï‡•ã organized ‡§∞‡§ñ‡•á‡§Ç</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-green-500/20 rounded-lg hover:bg-green-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-green-600 text-xl mt-1 group-hover:text-white transition-colors">üõ°Ô∏è</span>
                                        <div>
                                            <p className="font-semibold text-green-800 group-hover:text-white transition-colors">Error Handling</p>
                                            <p className="text-sm text-green-700 group-hover:text-green-100 transition-colors">Errors ‡§ï‡•ã properly handle ‡§ï‡§∞‡•á‡§Ç</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-green-500/20 rounded-lg hover:bg-green-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-green-600 text-xl mt-1 group-hover:text-white transition-colors">‚ö°</span>
                                        <div>
                                            <p className="font-semibold text-green-800 group-hover:text-white transition-colors">Small Functions</p>
                                            <p className="text-sm text-green-700 group-hover:text-green-100 transition-colors">Functions ‡§ï‡•ã ‡§õ‡•ã‡§ü‡§æ ‡§î‡§∞ focused ‡§∞‡§ñ‡•á‡§Ç</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            {/* Don'ts Card */}
                            <div className="bg-gradient-to-br from-red-500/10 to-rose-500/10 border-2 border-red-500/30 rounded-2xl p-8 shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-2">
                                <div className="flex items-center gap-4 mb-6">
                                    <div className="bg-red-500 text-white w-12 h-12 rounded-full flex items-center justify-center text-2xl font-bold">
                                        ‚úó
                                    </div>
                                    <h3 className="text-2xl font-bold text-red-700">‡§ó‡§≤‡§§ ‡§§‡§∞‡•Ä‡§ï‡•á</h3>
                                </div>
                                
                                <div className="space-y-4">
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-red-500/20 rounded-lg hover:bg-red-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-red-600 text-xl mt-1 group-hover:text-white transition-colors">üö´</span>
                                        <div>
                                            <p className="font-semibold text-red-800 group-hover:text-white transition-colors">Single Letter Variables</p>
                                            <p className="text-sm text-red-700 group-hover:text-red-100 transition-colors">a, b, c ‡§ú‡•à‡§∏‡•á ‡§®‡§æ‡§Æ avoid ‡§ï‡§∞‡•á‡§Ç</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-red-500/20 rounded-lg hover:bg-red-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-red-600 text-xl mt-1 group-hover:text-white transition-colors">ü§ê</span>
                                        <div>
                                            <p className="font-semibold text-red-800 group-hover:text-white transition-colors">No Comments</p>
                                            <p className="text-sm text-red-700 group-hover:text-red-100 transition-colors">Complex code ‡§Æ‡•á‡§Ç comments ‡§® ‡§≠‡•Ç‡§≤‡•á‡§Ç</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-red-500/20 rounded-lg hover:bg-red-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-red-600 text-xl mt-1 group-hover:text-white transition-colors">üí•</span>
                                        <div>
                                            <p className="font-semibold text-red-800 group-hover:text-white transition-colors">Division by Zero</p>
                                            <p className="text-sm text-red-700 group-hover:text-red-100 transition-colors">Zero ‡§∏‡•á ‡§≠‡§æ‡§ó ‡§ï‡•Ä check ‡§® ‡§ï‡§∞‡§®‡§æ</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-red-500/20 rounded-lg hover:bg-red-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-red-600 text-xl mt-1 group-hover:text-white transition-colors">üìè</span>
                                        <div>
                                            <p className="font-semibold text-red-800 group-hover:text-white transition-colors">Very Long Functions</p>
                                            <p className="text-sm text-red-700 group-hover:text-red-100 transition-colors">‡§¨‡§π‡•Å‡§§ ‡§≤‡§Ç‡§¨‡•á functions ‡§® ‡§¨‡§®‡§æ‡§è‡§Ç</p>
                                        </div>
                                    </div>
                                    
                                    <div className="flex items-start gap-3 p-3 bg-surface border border-red-500/20 rounded-lg hover:bg-red-600 hover:text-white transition-all duration-300 group cursor-pointer shadow-md">
                                        <span className="text-red-600 text-xl mt-1 group-hover:text-white transition-colors">‚ö†Ô∏è</span>
                                        <div>
                                            <p className="font-semibold text-red-800 group-hover:text-white transition-colors">Missing Keywords</p>
                                            <p className="text-sm text-red-700 group-hover:text-red-100 transition-colors">bawal suru/khatam ‡§® ‡§≠‡•Ç‡§≤‡•á‡§Ç</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {/* Pro Tips Section */}
                        <div className="bg-gradient-to-r from-primary/10 to-accent/10 border-2 border-primary/30 rounded-2xl p-8 mb-8">
                            <h3 className="text-2xl font-bold text-primary mb-6 flex items-center gap-3">
                                <span className="text-3xl">üí°</span>
                                Pro Tips for Bawal Code
                            </h3>
                            
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div className="bg-surface border border-primary/30 rounded-lg p-4 hover:bg-black transition-all duration-300 group cursor-pointer shadow-lg">
                                    <h4 className="font-bold text-primary mb-2 group-hover:text-orange-500 transition-colors">üéØ Variable Naming</h4>
                                    <p className="text-sm text-text-primary group-hover:text-orange-300 transition-colors">Hindi ‡§Æ‡•á‡§Ç meaningful names: <code className="bg-primary/20 px-1 rounded group-hover:bg-orange-500/30 group-hover:text-orange-200 transition-colors">sandesh</code>, <code className="bg-primary/20 px-1 rounded group-hover:bg-orange-500/30 group-hover:text-orange-200 transition-colors">umar</code>, <code className="bg-primary/20 px-1 rounded group-hover:bg-orange-500/30 group-hover:text-orange-200 transition-colors">sankhya</code></p>
                                </div>
                                
                                <div className="bg-surface border border-primary/30 rounded-lg p-4 hover:bg-black transition-all duration-300 group cursor-pointer shadow-lg">
                                    <h4 className="font-bold text-primary mb-2 group-hover:text-orange-500 transition-colors">üîÑ Loop Safety</h4>
                                    <p className="text-sm text-text-primary group-hover:text-orange-300 transition-colors">‡§π‡§Æ‡•á‡§∂‡§æ loop condition ‡§ï‡•ã check ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø infinite loop ‡§® ‡§¨‡§®‡•á</p>
                                </div>
                                
                                <div className="bg-surface border border-primary/30 rounded-lg p-4 hover:bg-black transition-all duration-300 group cursor-pointer shadow-lg">
                                    <h4 className="font-bold text-primary mb-2 group-hover:text-orange-500 transition-colors">üõ°Ô∏è Input Validation</h4>
                                    <p className="text-sm text-text-primary group-hover:text-orange-300 transition-colors">User input ‡§ï‡•ã ‡§π‡§Æ‡•á‡§∂‡§æ validate ‡§ï‡§∞‡•á‡§Ç before processing</p>
                                </div>
                                
                                <div className="bg-surface border border-primary/30 rounded-lg p-4 hover:bg-black transition-all duration-300 group cursor-pointer shadow-lg">
                                    <h4 className="font-bold text-primary mb-2 group-hover:text-orange-500 transition-colors">üìù Code Organization</h4>
                                    <p className="text-sm text-text-primary group-hover:text-orange-300 transition-colors">Related code ‡§ï‡•ã functions ‡§Æ‡•á‡§Ç group ‡§ï‡§∞‡•á‡§Ç</p>
                                </div>
                            </div>
                        </div>

                        <CodeBlock 
                            title="Clean Code Example"
                            description="‡§Ö‡§ö‡•ç‡§õ‡•Ä coding practices ‡§ï‡§æ ‡§â‡§¶‡§æ‡§π‡§∞‡§£"
                        >
{`bawal suru

// ‡§è‡§ï ‡§∏‡§æ‡§´ ‡§î‡§∞ ‡§∏‡§Æ‡§ù‡§®‡•á ‡§Ø‡•ã‡§ó‡•ç‡§Ø function
kaam calculate_simple_interest(principal, rate, time) {
    // Input validation
    agar (principal <= 0 || rate <= 0 || time <= 0) {
        bol "‡§§‡•ç‡§∞‡•Å‡§ü‡§ø: ‡§∏‡§≠‡•Ä values positive ‡§π‡•ã‡§®‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è!";
        return 0;
    }
    
    // Calculate simple interest
    ye interest = (principal * rate * time) / 100;
    
    // Display detailed result
    bol "‡§Æ‡•Ç‡§≤ ‡§∞‡§æ‡§∂‡§ø: ‚Çπ" + principal;
    bol "‡§¨‡•ç‡§Ø‡§æ‡§ú ‡§¶‡§∞: " + rate + "% ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑";
    bol "‡§∏‡§Æ‡§Ø: " + time + " ‡§µ‡§∞‡•ç‡§∑";
    bol "‡§∏‡§æ‡§ß‡§æ‡§∞‡§£ ‡§¨‡•ç‡§Ø‡§æ‡§ú: ‚Çπ" + interest;
    bol "‡§ï‡•Å‡§≤ ‡§∞‡§æ‡§∂‡§ø: ‚Çπ" + (principal + interest);
    
    return interest;
}

// Function ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó
ye principal_amount = 10000;
ye interest_rate = 8.5;
ye time_period = 3;

calculate_simple_interest(principal_amount, interest_rate, time_period);

bawal khatam`}
                        </CodeBlock>
                    </Section>

                    {/* Back to Top Button */}
                    <div className="text-center mt-16 mb-8">
                        <a 
                            href="#intro" 
                            className="inline-flex items-center gap-2 bg-primary text-background px-6 py-3 rounded-full font-bold transition-all duration-300 hover:bg-primary-dark hover:scale-105 shadow-lg"
                        >
                            ‚Üë ‡§µ‡§æ‡§™‡§∏ ‡§ä‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç
                        </a>
                    </div>

                    {/* Footer */}
                    <footer className="border-t border-primary pt-8 mt-16 text-center">
                        <p className="text-text-secondary mb-4">
                            ‡§Ø‡§π documentation Bawal Code community ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§¨‡§®‡§æ‡§à ‡§ó‡§à ‡§π‡•à‡•§
                        </p>
                        <Link 
                            href="/" 
                            className="inline-flex items-center gap-2 text-primary hover:text-primary-dark font-bold transition-colors"
                        >
                            ‚Üê ‡§µ‡§æ‡§™‡§∏ Bawal Code ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç
                        </Link>
                    </footer>
                </main>
            </div>
        </div>
    );
} 